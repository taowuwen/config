Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2017-05-04T11:42:19+08:00

====== ssh too slow ======
Created Thursday 04 May 2017


Have you verified your DNS setup?
Try the setting mdns off in /etc/host.conf.

EDIT:

It seems gentoo is handling this a bit different. To disable multicast DNS lookups, you have to change the file /etc/nsswitch.conf.
There should be something like:
hosts:          files mdns
Change it to:
hosts:          files dns


2. Edit your "/etc/ssh/ssh_config" and comment out these lines:
GSSAPIAuthentication yes
GSSAPIDelegateCredentials no

3. So in sshd_config on the server change this:
  #UseDNS yes
to this:
  UseDNS no

====== ssh login without password ======



How to do it

First log in on A as user a and generate a pair of authentication keys. Do not enter a passphrase:

a@A:~> ssh-keygen -t rsa
Generating public/private rsa key pair.
Enter file in which to save the key (/home/a/.ssh/id_rsa): 
Created directory '/home/a/.ssh'.
Enter passphrase (empty for no passphrase): 
Enter same passphrase again: 
Your identification has been saved in /home/a/.ssh/id_rsa.
Your public key has been saved in /home/a/.ssh/id_rsa.pub.
The key fingerprint is:
3e:4f:05:79:3a:9f:96:7c:3b:ad:e9:58:37:bc:37:e4 a@A

Now use ssh to create a directory ~/.ssh as user b on B. (The directory may already exist, which is fine):

a@A:~> ssh b@B mkdir -p .ssh
b@B's password: 

Finally append a's new public key to b@B:.ssh/authorized_keys and enter b's password one last time:

a@A:~> cat .ssh/id_rsa.pub | ssh b@B 'cat >> .ssh/authorized_keys'
b@B's password: 

From now on you can log into B as b from A as a without password:

a@A:~> ssh b@B

A note from one of our readers: Depending on your version of SSH you might also have to do the following changes:

	Put the public key in .ssh/authorized_keys2
	Change the permissions of .ssh to 700
	Change the permissions of .ssh/authorized_keys2 to 640

